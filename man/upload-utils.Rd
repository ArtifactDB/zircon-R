% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uploadFiles.R
\name{initializeUpload}
\alias{initializeUpload}
\alias{createUploadStartUrl}
\alias{uploadFiles}
\alias{completeUpload}
\alias{abortUpload}
\title{Upload utilities, for wizards only}
\usage{
initializeUpload(
  dir,
  files,
  start.url,
  dedup.md5 = NULL,
  dedup.md5.field = NULL,
  dedup.link = NULL,
  expires = NULL,
  user.agent = NULL
)

createUploadStartUrl(url, project, version)

uploadFiles(dir, url, initial, user.agent = NULL, attempts = 3)

completeUpload(
  url,
  initial,
  index.wait = 600,
  must.index = FALSE,
  permissions = list(),
  overwrite.permissions = FALSE,
  user.agent = NULL
)

abortUpload(url, initial, user.agent = NULL)
}
\arguments{
\item{dir}{String containing the path to a project directory on the file system, containing files to be uploaded.}

\item{files}{Character vector of paths to files to be uploaded within \code{dir}.
These should be relative to \code{dir}.}

\item{start.url}{String containing the URL to the upload endpoint.}

\item{dedup.md5}{Named character vector containing the MD5 sums of files that are potentially duplicated in the ArtifactDB backend.
Each name in the vector should be a relative path to a file in \code{dir}, while each value of the vector should be its MD5 sum.
Names should not overlap with entries in \code{files}.}

\item{dedup.md5.field}{String specifying the name of the metadata field containing the MD5 sum in existing ArtifactDB entries.
Must be specified if \code{dedup.md5} is used.}

\item{dedup.link}{Named character vector specifying which files are duplicates of resources in existing ArtifactDB IDs. 
Each name in the vector should be a relative path to a file in \code{dir}, while each value of the vector should be the existing ArtifactDB ID.
Names should not overlap with entries in \code{files}.}

\item{expires}{Integer scalar specifying the number of days before the files expire and are removed from the ArtifactDB instance.
By default, the files have no expiry date.}

\item{user.agent}{String containing a user agent string.
If \code{NULL}, a default user agent is used.}

\item{url}{String containing the URL to the REST API.}

\item{project}{String containing the project name.}

\item{version}{String containing the version.}

\item{initial}{The response object returned by \code{initializeUpload}, or a list generated by calling \code{\link{content}} on the response.}

\item{attempts}{Integer scalar specifying the number of upload attempts on each file, in case of connection drops or timeouts.
Each attempt is followed by a 1 minute wait.}

\item{index.wait}{Numeric scalar specifying the number of seconds to wait when checking for correct indexing.}

\item{must.index}{Logical scalar indicating whether to throw an error if the indexing is not successful.
If \code{FALSE}, a warning is raised if the indexing times out (but an error will still be raised if the indexing explicitly fails).}

\item{permissions}{A list containing permission information, see \code{\link{getPermissions}}.
This usually contains the \code{owners} and \code{viewers} character vectors.}

\item{overwrite.permissions}{Logical scalar indicating whether existing permissions should be overwritten.}
}
\value{
\code{initializeUpload} will return the \code{response} object from hitting the upload endpoint.
This will have already been checked for failure.

\code{uploadFiles} will upload all files to their URLs and return \code{NULL}.

\code{requestCompletion} will return the \code{response} object from hitting the completion endpoint.
This will have already been checked for failure.

\code{abortUrl} will return the \code{response} object from hitting the abort endpoint.
This will \emph{not} have been checked for failure, not least because this function is typically called in response to other errors during the upload;
we leave it to the caller to decide whether to add another error to the trace.

\code{createUploadStartUrl} will create the \dQuote{standard} upload URL to be used in \code{start.url}.
}
\description{
These are utilities for uploading files to ArtifactDB.
Not for the end-user or the typical package developer.
}
\author{
Aaron Lun
}
