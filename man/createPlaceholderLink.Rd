% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createPlaceholderLink.R
\name{createPlaceholderLink}
\alias{createPlaceholderLink}
\alias{extractLinkedID}
\title{Create a placeholder link}
\usage{
createPlaceholderLink(dir, path, id)

extractLinkedID(dir, path)
}
\arguments{
\item{dir}{String containing the path to the project directory.}

\item{path}{String containing the relative path of the file in \code{dir} to be linked from.}

\item{id}{String containing the ArtifactDB identifier of the file to be linked to.}
}
\value{
For \code{createLink}, a symbolic link is created at \code{path} inside \code{dir}, with the \code{id} string embedded in the name of the destination file.
\code{NULL} is invisibly returned.

For \code{extractLinkID}, a string is returned containing the ArtifactDB identifier used to create the link.
}
\description{
Create a placeholder file that links to an ArtifactDB ID.
This is by \code{\link{initializeUpload}} to automatically create deduplicating links.
}
\details{
The placeholder is implemented as a dangling symlink where the \code{id} is embedded into the destination path.
This distinguishes the placeholders from regular files and non-broken symlinks to existing targets,
allowing \code{\link{initializeUpload}} to safely assume that the placeholder represents a link to an ArtifactDB resource.
}
\examples{
tmp <- tempfile()
dir.create(tmp)
 
createPlaceholderLink(tmp, "boo.txt", example.id)
list.files(tmp)

extractLinkedID(tmp, "boo.txt")

}
\seealso{
\code{\link{initializeUpload}}, where the placeholders are automatically detected for linking.
}
\author{
Aaron Lun
}
