% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getFile.R
\name{getFile}
\alias{getFile}
\alias{getFileURL}
\title{Retrieve a file}
\usage{
getFile(
  id,
  url,
  path = NULL,
  cache = NULL,
  follow.links = TRUE,
  user.agent = NULL
)

getFileURL(id, url, expiry = NULL)
}
\arguments{
\item{id}{String containing the ArtifactDB identifier for a file.
This is a concatenated identifier involving the project name, file path and version,
i.e., \code{<project>:<path>@<version>} (see Examples).}

\item{url}{String containing the URL of the ArtifactDB REST endpoint.}

\item{path}{String containing the path to save the file.
This is only used if \code{cache} is not supplied.
Defaults to a temporary path if \code{NULL}.}

\item{cache}{Function to use for caching the result, see \code{\link{getFileMetadata}} for the requirements.
If \code{NULL}, no caching is performed.}

\item{follow.links}{Logical scalar indicating whether to search for links to duplicate files, see Details.}

\item{expiry}{Integer scalar specifying the time until expiry of the link, in seconds.
Defaults to 120 if \code{NULL}; maximum value is 86400 (24 hours).}
}
\value{
For \code{getFileURL}, a string containing a URL that can be used to download the specified file.

For \code{getFile}, a string containing a path to a cached file downloaded from the ArtifactDB instance.
}
\description{
Retrieve a file from an ArtifactDB using its REST endpoints.
}
\details{
ArtifactDB instances support linking between identical files to avoid storing unnecessary duplicates.
If \code{cache} is provided and \code{follow.links=TRUE}, \code{getFile} will follow the links to determine whether the requested file is the same as any previously cached files.
This avoids downloading another copy of the file if one is already available under a linked identifier.
If no local duplicate can be found, \code{getFile} will download the earliest version of the file among the set of duplicates, 
and then populate all other duplicates in the cache directory with hard links or copies.
If this fails or if \code{cache=NULL}, it will just download the requested file directly.
}
\examples{
getFileURL(example.id, url = example.url)

X <- getFile(example.id, url = example.url)
readLines(X) # as we know it's a text file.

# Simple caching in the temporary directory:
tmp.cache <- file.path(tempdir(), "zircon-cache")
dir.create(tmp.cache)
cache.fun <- function(key, save) {
    path <- file.path(tmp.cache, URLencode(key, reserved=TRUE, repeated=TRUE))
    if (!file.exists(path)) {
        save(path)
    } else {
        cat("cache hit!\n")
    }
    path
}
getFile(example.id, example.url, cache = cache.fun)
getFile(example.id, example.url, cache = cache.fun) 

}
\seealso{
\code{\link{packID}}, to create \code{id} from various pieces of information.
}
\author{
Aaron Lun
}
