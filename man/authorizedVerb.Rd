% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/authorizedVerb.R
\name{authorizedVerb}
\alias{authorizedVerb}
\alias{checkResponse}
\alias{identityAvailable}
\alias{identityHeaders}
\title{Perform authorized HTTP requests}
\usage{
authorizedVerb(FUN, ..., user.agent = NULL, allow.redirect = FALSE)

checkResponse(x, allow.redirect = FALSE)

identityAvailable(fun)

identityHeaders(fun)
}
\arguments{
\item{FUN}{A \pkg{httr} function defining a verb, e.g., \code{\link{GET}}.}

\item{...}{Further arguments to pass to \code{FUN}.}

\item{user.agent}{String specifying the user agent, defaults to the current R installation and \pkg{zircon} version.}

\item{allow.redirect}{Logical scalar indicating whether a redirect should not be considered a failure.}

\item{x}{Response list from \pkg{httr} verb functions.}

\item{fun}{Functions that check the identity and create HTTP request headers, see Details.}
}
\value{
For \code{authorizedVerb}, the output of \code{FUN} without checking for errors.

For \code{checkResponse}, an error is raised with an appropriate message if the request failed.
Otherwise, an invisible \code{NULL}.

For \code{identityAvailable} and \code{identityHeaders}, if \code{fun} is missing, the current function is returned.
If \code{fun} is supplied, it is used as the checker/creator function inside \code{authorizedVerb}, and the \emph{previous} value of the function is invisibly returned.
}
\description{
Perform authorized HTTP requests to an ArtifactDB REST endpoint.
}
\details{
The \code{fun} in \code{identityAvailable} should accept no arguments and should return a logical scalar specifying whether a user identity is available for the current R session.

The \code{fun} in \code{identityHeaders} should accept no arguments and should return a named list of HTTP request headers that authenticates the user to the ArtifactDB backend. 
The exact nature of these headers depends on the authentication system used by the backend, e.g., \code{Authorization} headers with JSON web tokens, SSH keys, or others.
If the corresponding credentials are not available, \code{identityHeaders} should prompt the user to create them (or fail outright in non-interactive sessions).

If \code{identityAvailable} is not available or returns \code{FALSE}, \code{authorizedVerb} will attempt to perform an unauthenticated request.
If this fails and \code{identityHeader} is available, it will repeat the request after calling \code{identityHeader} to create authentication headers.
This process avoids burdening the user with authentication issues when requesting publicly available resources, falling back to some authentication process as required.
}
\examples{
library(httr)
URL <- file.path(example.url, "files", URLencode(example.id, reserved=TRUE))
authorizedVerb(GET, url=URL)

# Triggering failures:
URL2 <- file.path(example.url, "files", "something_is_absent")
out <- authorizedVerb(GET, url=URL2)
try(.checkResponse(out))

}
\author{
Aaron Lun
}
